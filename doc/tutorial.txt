====
doit 
====

All 'doit' does is to execute an external process as a shell script and report at the end if they were successful or not.


1) first you create an instance

>>> from doit.core import Runner,CmdTask
>>> runner = Runner()

2) now you need to add new tasks. each task takes a sequence of string as a parameter (as the first argument of subprocess.Popen from std lib). 

>>> runner._addTask(CmdTask('task0',['ls']))

3) you can add as many tasks as you want...

>>> runner._addTask(CmdTask('task1',['ls','-1']))
>>> runner._addTask(CmdTask('task2',['ls','-1','-a']))

4) when you finish adding tasks you just run it.

>>> runner.run()
task0 => Cmd: ls
task1 => Cmd: ls -1
task2 => Cmd: ls -1 -a
0

5) check the result

>>> runner.success
True

------------

Of course a process can also fail...

>>> runner = Runner()
>>> runner._addTask(CmdTask('taskX',['ls', 'i dont exist']))
>>> runner.run()
taskX => Cmd: ls i dont exist
Task failed
1
>>> runner.success
False

